{"rule":"KONCEPT","sentence":"^\\QKoncepty są definiowane jako zbiór wymagań, które typ musi spełnić.\\E$"}
{"rule":"KONCEPT","sentence":"^\\QKoncepty zostały wprowadzone w C++20 jako sposób na lepsze dokumentowanie szablonów, oraz czytelniejsze komunikaty o błędzie w wypadku niepoprawnego użycia.\\E$"}
{"rule":"KONCEPT","sentence":"^\\QKoncepty.\\E$"}
{"rule":"KONCEPT","sentence":"^\\QKoncepty zostały wprowadzone w C++20 jako sposób na lepsze dokumentowanie szablonów oraz czytelniejsze komunikaty o błędzie w wypadku niepoprawnego użycia.\\E$"}
{"rule":"BRAK_PRZECINKA_KTORY","sentence":"^\\QZamiast tego, funkcje których wykonanie może się nie powieść, zwracają strukturę informującą o błędzie.\\E$"}
{"rule":"ZOSTALO_ZROBIONE","sentence":"^\\QGdyby reguły były odwrócone, odniesienie do operatorów literałowych prawie zawsze byłyby rozpoznawane jako wywołanie normalnej funkcji\\E$"}
{"rule":"Z_ZE","sentence":"^\\QPonieważ kompilator C-=-1 stanowi środowisko urchomieniowe dla tego języka, z wbudowanymi narzędziami do analizy kodu źródłowego,\\E$"}
{"rule":"Z_ZE","sentence":"^\\QPonieważ kompilator C-=-1 stanowi środowisko urchomieniowe dla tego języka, z wbudowanymi narzędziami do analizy kodu źródłowego, można go wykorzystać w tym celu.\\E$"}
