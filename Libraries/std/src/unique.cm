import {null} from {cm1mLang}

class @unique<typename T>
{
	private _allocated : T*;

	public fn finalize()
	{
		if(self._allocated != null<T>())
			delete<T>(self._allocated);
	}

	[NoDiscard()]
	public fn move() -> @unique<T>
	{
		let result = @unique<T>(self._allocated);
		self._allocated = null<T>();
		return result;
	}

	public fn get() -> T*
	{
		return self._allocated;
	}

	internal fn construct(value: T*)
	{
		self._allocated = value;
	}
	
	public fn construct()
	{
		self._allocated = null<T>();
	}
}
